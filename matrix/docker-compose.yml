version: '3.8'

services:
  synapse:
    # first run: docker compose run synapse generate && docker compose down && docker compose --profile element up -d
    container_name: synapse
    image: matrixdotorg/synapse:latest
    restart: unless-stopped
    hostname: ${SYNAPSE_SERVER_NAME}
    ports: [ "${DOCKER_SYNAPSE_PORT_ON_HOST:-8008}:${SYNAPSE_HTTP_PORT:-8008}" ]
    volumes: [ "./data/synapse:/data" ]
    networks: [ "web", "backend" ]
    depends_on: [ "postgres" ]
    environment:
      - SYNAPSE_SERVER_NAME=${SYNAPSE_SERVER_NAME}
      - SYNAPSE_REPORT_STATS=${SYNAPSE_REPORT_STATS:-no}
      - SYNAPSE_HTTP_PORT=${SYNAPSE_HTTP_PORT:-8008}
      - SYNAPSE_NO_TLS=${SYNAPSE_NO_TLS:-0}
      # - SYNAPSE_ENABLE_REGISTRATION=${SYNAPSE_ENABLE_REGISTRATION:-false}
      - SYNAPSE_REGISTRATION_SHARED_SECRET=${SYNAPSE_REGISTRATION_SHARED_SECRET}
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-synapse}
      - POSTGRES_USER=${POSTGRES_USER:-synapse}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-sup3rs3cret}

  postgres:
    container_name: synapse_postgres
    image: postgres:alpine
    restart: unless-stopped
    volumes: [ "./data/postgres:/var/lib/postgresql/data" ]
    networks: [ "backend" ]
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-synapse}
      - POSTGRES_USER=${POSTGRES_USER:-synapse}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-sup3rs3cret}

  element:
    container_name: synapse_element
    image: vectorim/element-web:latest
    restart: unless-stopped
    ports: [ "${DOCKER_ELEMENT_PORT_ON_HOST:-8080}:80" ]
    volumes: [ "./element-config.json:/app/config.json:ro" ]
    networks: [ "web" ]
    profiles: [ "element" ]

  admin:
    container_name: synapse_admin
    image: awesometechnologies/synapse-admin:latest
    restart: unless-stopped
    ports: [ "${DOCKER_SYNAPSE_ADMIN_PORT_ON_HOST:-8081}:80" ]
    networks: [ "web" ]
    profiles: [ "tools" ]

networks:
  web:
  backend:
