# example compose file to use with nginx proxy manager (https://nginxproxymanager.com/advanced-config/). 

version: '3.8'

services:
  synapse:
    # first run: docker compose run synapse generate && docker compose down && docker compose --profile element up -d
    container_name: synapse
    image: matrixdotorg/synapse:latest
    restart: unless-stopped
    hostname: ${SYNAPSE_SERVER_NAME}
    volumes: [ './data/synapse:/data' ]
    networks: [ 'scoobydoo', 'backend' ]
    depends_on: [ 'postgres' ]
    environment:
      # all env variables: https://github.com/matrix-org/synapse/blob/develop/docker/conf/homeserver.yaml
      - SYNAPSE_SERVER_NAME=${SYNAPSE_SERVER_NAME}
      - SYNAPSE_REPORT_STATS=${SYNAPSE_REPORT_STATS:-no}
      - SYNAPSE_HTTP_PORT=${SYNAPSE_HTTP_PORT:-8008}
      - SYNAPSE_NO_TLS=${SYNAPSE_NO_TLS:-0}
      - SYNAPSE_REGISTRATION_SHARED_SECRET=${SYNAPSE_REGISTRATION_SHARED_SECRET}
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-synapse}
      - POSTGRES_USER=${POSTGRES_USER:-synapse}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-sup3rs3cret}

  postgres:
    container_name: synapse_postgres
    image: postgres:alpine
    restart: unless-stopped
    volumes: [ './data/postgres:/var/lib/postgresql/data' ]
    networks: [ 'backend' ]
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-synapse}
      - POSTGRES_USER=${POSTGRES_USER:-synapse}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-sup3rs3cret}

  element:
    container_name: synapse_element
    image: vectorim/element-web:latest
    restart: unless-stopped
    volumes: [ './element-config.json:/app/config.json:ro' ]
    networks: [ 'scoobydoo' ]
    profiles: [ 'element' ]

  admin:
    container_name: synapse_admin
    image: awesometechnologies/synapse-admin:latest
    restart: unless-stopped
    networks: [ 'scoobydoo' ]
    profiles: [ 'tools' ]

networks:
  backend:
  scoobydoo:
    external: true
